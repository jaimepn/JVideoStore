
@{
    ViewBag.Title = "New";
}

<h2>New Rental Form</h2>

<form id="newRental" name="newRental">

    <div class="form-group">
        <label>Customer</label>
        <div class="tt-container">
            <input id="customer" name="customer" data-rule-validCustomer="true" required type="text" autocomplete="off" value="" class="form-control" />
        </div>        
    </div>

    <div class="form-group">
        <label>Movie</label>
        <div class="tt-container">
            <input id="movie" name="movie" data-rule-rentalHasMovies="true" type="text" autocomplete="off" value="" class="form-control" />
        </div>
    </div>

    <div class="row">
        <div class="col-md-4 col-sm-4">
            <ul id="movies" class="list-group"></ul>
        </div>
    </div>        

    <button class="btn btn-primary">Submit</button>

</form>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval");
    <script>
        $(document).ready(function () {

            var vm = {
                movieIds: []
            };

            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                //prefetch: '../data/films/post_1960.json',
                remote: {
                    url: '/api/customers?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#customer').typeahead(
                {
                    minLength: 3,
                    highlight: true
                }
                , {
                    name: 'customers',
                    display: 'name',
                    source: customers
                }).on("typeahead:select", function (e, customer) {
                    vm.customerId = customer.id;
                });

            var movies = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                //prefetch: '../data/films/post_1960.json',
                remote: {
                    url: '/api/movies?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#movie').typeahead(
                {
                    minLength: 3,
                    highlight: true
                }
                , {
                    name: 'movies',
                    display: 'name',
                    source: movies
                }).on("typeahead:select", function (e, movie) {
                    //adds movies to html list
                    $("#movies").append("<li class='list-group-item'>" + movie.name + "</li>");

                    //clears the textbox
                    $("#movie").typeahead("val", "");

                    //add id to view model
                    vm.movieIds.push(movie.id);


                });

            $.validator.addMethod("validCustomer", function () {
                return vm.customerId && vm.customerId !== 0;
            }, "Please select a customer from the list.");

            $.validator.addMethod("rentalHasMovies", function () {
                return vm.movieIds.length > 0;
            }, "Please select at least one movie.");

            var validator = $("#newRental").validate({
                submitHandler: function() {

                    $.ajax({
                        url: "/Api/NewRentals",
                        method: "post",
                        data: vm
                    })
                    .done(function () {
                        toastr.success("Rental created successfully!");

                        $("#customer").typeahead("val", "");
                        $("#movie").typeahead("val", "");
                        $("#movies").empty();
                        vm = { movieIds: [] };
                        validator.resetForm();
                    })
                    .fail(function () {
                        toastr.error("Error: Unable to create rental!");
                        });

                    //same as e.preventDefault in submit
                    return false;

                }
            });
        });
    </script>
    

}

